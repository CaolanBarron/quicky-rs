extern crate percent_encoding;
use percent_encoding::{utf8_percent_encode, AsciiSet, CONTROLS};

const FRAGMENT: &AsciiSet = &CONTROLS.add(b' ').add(b'"')
    .add(b'<').add(b'>').add(b'`');

pub fn construct_WEBSITE_url(query: &str) -> String {
    if query == "#" {
        "https://WEBSITE.com".to_string()
    } else {
        // Assume the other match is # sometext and search
        construct_WEBSITE_search_url(&query[3..])
    }
}



pub fn construct_WEBSITE_search_url(query: &str) -> String {
    let encoded_query = utf8_percent_encode(query, FRAGMENT).to_string();
    let WEBSITE_search_url = format!("https://WEBSITE.com/search?q={}",
        encoded_query);
    
    WEBSITE_search_url
}

#[cfg(test)] 
mod tests {
    use super::*;

    #[test]
    fn test_construct_WEBSITE_url() {
        let fake_query = "#";
        assert_eq!(construct_WEBSITE_url(fake_query),
        "https://WEBSITE.com");
    }

    #[test]
    fn test_construct_WEBSITE_url_query() {
        let fake_query = "# hello world";
        assert_eq!(
            construct_WEBSITE_url(fake_query),
            "https://WEBSITE.com/search?q=hello%20world"
        );
    }

} 